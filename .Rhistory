### LOADING functions/libraries
library(readxl)
setwd("~/Documents/GitHub/psc")
devtools::load_all()
### Getting TACE model
setwd("/Users/richardjackson/Documents/GitHub/pscLibrary/TACE_SIRT/Data")
load("1knotmodel.Rdata")
flexspline_model1
tb1 <- flexspline_model1$ceofficients
tb1
coef(flexspline_model1)
summary(flexspline_model1)$coefficients
attributes(flexspline_model1)
flexspline_model1$coefficients
attributes(summary(flexspline_model1))
summary(flexspline_model1)
summary(flexspline_model1)$X
plot(flexspline_model1)
plot(flexspline_model1,ylab="Overall Survival",xlab="Time (Months)")
plot(flexspline_model1,ylab="Overall Survival",xlab="Time (Months)",col=c(4,5))
plot(flexspline_model1,ylab="Overall Survival",xlab="Time (Months)",col=c(4,5),lwd=4)
plot(flexspline_model1,ylab="Overall Survival (%)",xlab="Time (Months)",
col=c(4,5),lwd=4,cex.lab=1.4,font.lab=1.3)
plot(flexspline_model1,ylab="Overall Survival (%)",xlab="Time (Months)",
col=c(4,5),lwd=4,cex.lab=1.4,font.lab=3)
plot(flexspline_model1,ylab="Overall Survival (%)",xlab="Time (Months)",
col=c(4,5),lwd=4,cex.lab=1.4,font.lab=3,cex.axis=1.3)
plot(flexspline_model1,ylab="Overall Survival (%)",xlab="Time (Months)",
col=c(4,5),lwd=4,cex.lab=1.4,font.lab=3,cex.axis=1.3,main="Overall Survival
of TACE")
plot(flexspline_model1,ylab="Overall Survival (%)",xlab="Time (Months)",
col=c(4,5),lwd=4,cex.lab=1.4,font.lab=3,cex.axis=1.3,main="TACE Survival")
plot(flexspline_model1,ylab="Overall Survival (%)",xlab="Time (Months)",
col=c(4,5),lwd=4,cex.lab=1.4,font.lab=3,cex.axis=1.3,cex.main=1.4,font.main=2
main="TACE Survival")
plot(flexspline_model1,ylab="Overall Survival (%)",xlab="Time (Months)",
col=c(4,5),lwd=4,cex.lab=1.4,font.lab=3,cex.axis=1.3,cex.main=1.4,font.main=2,
main="TACE Survival")
setwd("~/Documents/GitHub/pscVis")
devtools::load_all()
setwd("~/Documents/GitHub/pscVis/pscVis")
devtools::load_all()
model.ob <- pscCFM(flexspline_model1)
library(RColorBrewer)
model.ob <- pscCFM(flexspline_model1)
library(waffle)
model.ob <- pscCFM(flexspline_model1)
model.ob
model.ob$setting$vis
ggarrange(model.ob$setting$vis)
library(ggpubr)
ggarrange(model.ob$setting$vis)
list(model.ob$setting$vis)
ggarrange(list(model.ob$setting$vis)[[1]])
ggarrange(list(model.ob$setting$vis))
ggarrange(model.ob$setting$vis[[1]])
ggarrange(model.ob$setting$vis[[1]],
ggarrange(model.ob$setting$vis[[2]]),
ggarrange(model.ob$setting$vis[[3]]),
ggarrange(model.ob$setting$vis[[4]]))
ggarrange(model.ob$setting$vis[[1]],
model.ob$setting$vis[[2]]),
ggarrange(model.ob$setting$vis[[1]],
model.ob$setting$vis[[2]],
model.ob$setting$vis[[3]],
model.ob$setting$vis[[4]])
ggsave(file="TACE_dataPlot.png")
getwd()
setwd("/Users/richardjackson/Documents/GitHub/pscLibrary/TACE_SIRT")
ggarrange(model.ob$setting$vis[[1]],
model.ob$setting$vis[[2]],
model.ob$setting$vis[[3]],
model.ob$setting$vis[[4]])
ggsave(file="TACE_dataPlot.png")
png(filename="TACE_km1.png")
plot(flexspline_model1,ylab="Overall Survival (%)",xlab="Time (Months)",
col=c(4,5),lwd=4,cex.lab=1.4,font.lab=3,cex.axis=1.3,cex.main=1.4,
font.main=2,main="TACE Survival")
dev.off()
model.ob[1:3,]
model.ob
model.ob$cov_co
model.ob$model$cov_co
model.ob$model$haz_co
model.ob$model$cov_co
model.ob$model$sig
diag(model.ob$model$sig)
sqrt(diag(model.ob$model$sig))
round(sqrt(diag(model.ob$model$sig)),3)
c(model.ob$model$haz_co,model.ob$model$cov_co)
round(3,c(model.ob$model$haz_co,model.ob$model$cov_co))
round(c(model.ob$model$haz_co,model.ob$model$cov_co),3)
est <- round(c(model.ob$model$haz_co,model.ob$model$cov_co),3)
cbind(est,se)
est <- round(c(model.ob$model$haz_co,model.ob$model$cov_co),3)
se <- round(sqrt(diag(model.ob$model$sig)),3)
cbind(est,se)
tb <- cbind(est,se)
kable(tb)
library(knitr)
kable(tb)
?kable(tb)
kable(tb,format="html")
ggarrange(model.ob$setting$vis[[1]],
model.ob$setting$vis[[2]],
model.ob$setting$vis[[3]],
model.ob$setting$vis[[4]],nrow=4)
ggsave(file="TACE_dataPlot.png",width=6,height=24)
getwd()
ggarrange(model.ob$setting$vis[[1]],
model.ob$setting$vis[[2]],
model.ob$setting$vis[[3]],
model.ob$setting$vis[[4]],nrow=4)
ggsave(file="TACE_dataPlot.png",width=6,height=12)
23*45
25*45
25*47
25*46
24*46
---
layout: model
cfmValid.flexsurgreg
cfmDataVis
table1
####  Clinical Charcteristics table
## input:	x - data frame of covariates to be summarised
#			by - what they being summarised by
summaryTable <- function(x,by="none",cont.sum="med",se=TRUE,perc=TRUE,missing=FALSE,row=TRUE,test=FALSE,flex=FALSE,nam=colnames(x),...){
if(by[1]=="none") stop("No 'by'. I will do this bit later - Rich")
if(class(by)!="factor") by <- as.factor(by)
if(class(x)=="matrix") x <- as.data.frame(x)
missing.by <- length(which(is.na(by)))>0
lev <- levels(by)
#nam <- names(cov)
TAB<-table(by,useNA="always")
TAB<-c("Total","",TAB,sum(TAB))
if(test) TAB <- c(TAB,"")
for(i in 1:ncol(x)){
## reclassifyign character covariates
if(class(x[,i])=="character"){
fac.int <- length(unique(x[,i]))/length(x[,i])
if(fac.int>0.1) {
x[,i] <- as.numeric(x[,i])
warning(paste(nam[i],"converted to numeric"))
}
if(fac.int<=0.1) {
x[,i] <- as.factor(x[,i])
warning(paste(nam[i],"converted to factor"))
}
}
## Factor variables
if(class(x[,i])=="factor"){
x[,i]<-as.factor(as.character(x[,i]))
tab<- summ.fac(x[,i],by=by,row=row,perc=perc,test=test)
tab <- cbind(rep(nam[i],nrow(tab)),c(levels(x[,i]),"Missing"),tab)
if(!missing) tab <- tab[-nrow(tab),]
TAB<-rbind(TAB,tab)
}
## Continuous Variables
if(class(x[,i])=="integer"|class(x[,i])=="numeric"){
if(cont.sum=="med") {
tab<-tapply(x[,i],by,summ.med)
tab<-c(nam[i],"median (IQR)",tab,NA, summ.med(x[,i]))
}
if(cont.sum=="mean") {
tab<-tapply(x[,i],by,summ.mean,se=se)
tab<-c(nam[i],"mean (se)",tab,NA, summ.med(x[,i]))
}
if(missing){
na.tab<-table((is.na(x[,i])|x[,i]=="-Inf"|x[,i]=="Inf"),by)
na.id<-which(row.names(na.tab)=="TRUE")
### only add missing column if any observed
if(length(na.id)>0)	{
na.tab<-na.tab[na.id,]
na.tab<-c(na.tab,0,sum(na.tab))
na.tab <- c(nam[i],"Missing",na.tab)
tab<-rbind(tab,na.tab)
}
}
if(test){
na.tab<-table((is.na(x[,i])|x[,i]=="-Inf"|x[,i]=="Inf"),by)
if(min(na.tab[1,])>15) pval <- round(t.test(x[,i]~by)$p.value,3)
if(min(na.tab[1,])<=15) pval <- round(wilcox.test(x[,i]~by)$p.value,3)
tab <- c(tab,pval)
}
TAB<-rbind(TAB,tab)
}
## Neither Factor or Continuous
if(class(x[,i])!="integer"&class(x[,i])!="numeric"&class(x[,i])!="factor"&class(x[,i])!="character"){
warning(paste(nam[i],"not included due to uncompatible class"))
}
}
### Adding in column names
cnam <- c("Covariate","Level", lev ,"Missing","Total")
if(test) cnam <- c(cnam,"p-value")
colnames(TAB) <- cnam
### Removing missing column (if required)
if(!missing|!missing.by) TAB <- TAB[,-which(colnames(TAB)=="Missing")]
### Setting return object
ret <- TAB
### Formatted flex table (if required)
if(flex){
flexTAB <- FlexTable(TAB,...)
### merging column for factors
nam.tab <-which(table(TAB[,1])>1)
for(m in names(nam.tab)){
row.id <- which(TAB[,1]==m)
flexTAB <- spanFlexTableRows(flexTAB,1,min(row.id),max(row.id))
}
ret <- flexTAB
}
ret
}
